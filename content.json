{"meta":{"title":"bin","subtitle":"good good study,day day up","description":"good good study,day day up !!","author":null,"url":"http://blog.binvon.com","root":"/"},"pages":[{"title":"","date":"2021-10-06T14:13:16.750Z","updated":"2021-10-06T14:13:16.750Z","comments":true,"path":"search/index.html","permalink":"http://blog.binvon.com/search/index.html","excerpt":"","text":""},{"title":"关于","date":"2021-10-06T15:01:40.629Z","updated":"2021-10-06T15:01:40.629Z","comments":true,"path":"about/index.html","permalink":"http://blog.binvon.com/about/index.html","excerpt":"","text":"type: “about”"},{"title":"分类","date":"2021-10-06T13:29:04.595Z","updated":"2021-10-06T10:48:38.141Z","comments":true,"path":"categories/index.html","permalink":"http://blog.binvon.com/categories/index.html","excerpt":"","text":"type: “categories” comments: false"},{"title":"标签","date":"2021-10-06T13:29:44.998Z","updated":"2021-10-06T10:48:38.156Z","comments":true,"path":"tags/index.html","permalink":"http://blog.binvon.com/tags/index.html","excerpt":"","text":"type: “tags” comments: false"}],"posts":[{"title":"java的泛型","slug":"java的泛型","date":"2021-07-04T18:26:54.000Z","updated":"2021-10-06T10:48:38.141Z","comments":true,"path":"2021/07/05/java的泛型/","link":"","permalink":"http://blog.binvon.com/2021/07/05/java%E7%9A%84%E6%B3%9B%E5%9E%8B/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"使用goolge cloud建设ssr","slug":"使用goolge-cloud建设ssr","date":"2019-12-29T08:40:12.000Z","updated":"2021-10-06T10:48:38.141Z","comments":true,"path":"2019/12/29/使用goolge-cloud建设ssr/","link":"","permalink":"http://blog.binvon.com/2019/12/29/%E4%BD%BF%E7%94%A8goolge-cloud%E5%BB%BA%E8%AE%BEssr/","excerpt":"","text":"yum -y install wget wget –no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh chmod +x shadowsocksR.sh ./shadowsocksR.sh 2&gt;&amp;1 | tee shadowsocksR.log ———————————————————代码分割线————输入每行回车设置密码13231端口236","categories":[],"tags":[{"name":"googel ssr","slug":"googel-ssr","permalink":"http://blog.binvon.com/tags/googel-ssr/"}]},{"title":"如何使用hexo搭建blog","slug":"使用hexo搭建blog","date":"2017-02-23T07:20:35.000Z","updated":"2021-10-06T10:48:38.141Z","comments":true,"path":"2017/02/23/使用hexo搭建blog/","link":"","permalink":"http://blog.binvon.com/2017/02/23/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BAblog/","excerpt":"","text":"测试图片","categories":[{"name":"blog","slug":"blog","permalink":"http://blog.binvon.com/categories/blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://blog.binvon.com/tags/hexo/"}]},{"title":"can not read a block mapping entry; a multiline key may not be an implicit key at line 4, column 1:","slug":"can-not-read-a-block-mapping-entry-a-multiline-key-may-not-be-an-implicit-key-at-line-4-column-1","date":"2015-09-10T08:00:11.000Z","updated":"2015-09-10T15:03:42.000Z","comments":true,"path":"2015/09/10/can-not-read-a-block-mapping-entry-a-multiline-key-may-not-be-an-implicit-key-at-line-4-column-1/","link":"","permalink":"http://blog.binvon.com/2015/09/10/can-not-read-a-block-mapping-entry-a-multiline-key-may-not-be-an-implicit-key-at-line-4-column-1/","excerpt":"","text":"无法读取块映射项;多行键可能不是第4行第1列的隐式键: 我是新建一篇博客时、编译出现的错误。其实我之前一直不配置tags的。这里的”:”后面还是要接上空格。","categories":[{"name":"hexoBug","slug":"hexoBug","permalink":"http://blog.binvon.com/categories/hexoBug/"}],"tags":[{"name":"hexoBug","slug":"hexoBug","permalink":"http://blog.binvon.com/tags/hexoBug/"}]},{"title":"BIO,NIO,AIO 有什么区别","slug":"BIO-NIO-AIO-有什么区别","date":"2015-08-04T18:11:22.000Z","updated":"2015-08-10T15:03:42.000Z","comments":true,"path":"2015/08/05/BIO-NIO-AIO-有什么区别/","link":"","permalink":"http://blog.binvon.com/2015/08/05/BIO-NIO-AIO-%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/","excerpt":"","text":"BIO （Blocking I/O）：同步阻塞I/O模式，数据的读取写入必须阻塞在一个线程内等待其完成。这里使用那个经典的烧开水例子，这里假设一个烧开水的场景，有一排水壶在烧开水，BIO的工作模式就是， 叫一个线程停留在一个水壶那，直到这个水壶烧开，才去处理下一个水壶。但是实际上线程在等待水壶烧开的时间段什么都没有做。 NIO （New I/O）：同时支持阻塞与非阻塞模式，但这里我们以其同步非阻塞I/O模式来说明，那么什么叫做同步非阻塞？如果还拿烧开水来说，NIO的做法是叫一个线程不断的轮询每个水壶的状态，看看是否有水壶的状态发生了改变，从而进行下一步的操作。 AIO （ Asynchronous I/O）：异步非阻塞I/O模型。异步非阻塞与同步非阻塞的区别在哪里？异步非阻塞无需一个线程去轮询所有IO操作的状态改变，在相应的状态改变后，系统会通知对应的线程来处理。对应到烧开水中就是，为每个水壶上面装了一个开关，水烧开之后，水壶会自动通知我水烧开了。 进程中的IO调用步骤大致可以分为以下四步： 进程向操作系统请求数据 ; 操作系统把外部数据加载到内核的缓冲区中; 操作系统把内核的缓冲区拷贝到进程的缓冲区 ; 进程获得数据完成自己的功能 ; 当操作系统在把外部数据放到进程缓冲区的这段时间（即上述的第二，三步），如果应用进程是挂起等待的，那么就是同步IO，反之，就是异步IO，也就是AIO 。","categories":[{"name":"java基础","slug":"java基础","permalink":"http://blog.binvon.com/categories/java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"java基础","slug":"java基础","permalink":"http://blog.binvon.com/tags/java%E5%9F%BA%E7%A1%80/"}]},{"title":"continue,break,return有什么区别","slug":"continue-break-return有什么区别","date":"2015-07-11T18:23:42.000Z","updated":"2015-07-12T15:03:42.000Z","comments":true,"path":"2015/07/12/continue-break-return有什么区别/","link":"","permalink":"http://blog.binvon.com/2015/07/12/continue-break-return%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/","excerpt":"","text":"1、return ：直接跳出当前的方法,返回到该调用的方法的语句处,继续执行 2、break：在循环体内结束整个循环过程 3、continue ：结束本次的循环，直接进行下一次的循环","categories":[{"name":"java基础","slug":"java基础","permalink":"http://blog.binvon.com/categories/java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"java基础","slug":"java基础","permalink":"http://blog.binvon.com/tags/java%E5%9F%BA%E7%A1%80/"}]},{"title":"CentOS7查看最大线程数","slug":"CentOS7查看最大线程数","date":"2015-07-10T08:23:43.000Z","updated":"2019-10-22T15:03:42.000Z","comments":true,"path":"2015/07/10/CentOS7查看最大线程数/","link":"","permalink":"http://blog.binvon.com/2015/07/10/CentOS7%E6%9F%A5%E7%9C%8B%E6%9C%80%E5%A4%A7%E7%BA%BF%E7%A8%8B%E6%95%B0/","excerpt":"","text":"aaaa","categories":[{"name":"服务器","slug":"服务器","permalink":"http://blog.binvon.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"http://blog.binvon.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"JDK安装与环境变量配置","slug":"JDK安装与环境变量配置","date":"2015-07-10T08:23:43.000Z","updated":"2015-07-10T15:03:42.000Z","comments":true,"path":"2015/07/10/JDK安装与环境变量配置/","link":"","permalink":"http://blog.binvon.com/2015/07/10/JDK%E5%AE%89%E8%A3%85%E4%B8%8E%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/","excerpt":"","text":"工具/原料 JDK1.7.0 WIN7 方法/步骤 一、安装JDK 选择安装目录 安装过程中会出现两次 安装提示 。第一次是安装 jdk ，第二次是安装 jre 。 建议两个都安装在同一个java文件夹中的不同文件夹中。 （不能都安装在java文件夹的根目录下，jdk和jre安装在同一文件夹会出错）如下图所示 二、1：安装jdk 随意选择目录 只需把默认安装目录 \\java 之前的目录修改即可 2：安装jre→更改→ \\java 之前目录和安装 jdk 目录相同即可 注：若无安装目录要求，可全默认设置。无需做任何修改，两次均直接点下一步。 三、安装完JDK后配置环境变量 计算机→属性→高级系统设置→高级→环境变量 四、系统变量→新建 JAVA_HOME 变量 。 变量值填写jdk的安装目录（本人是 E:\\Java\\jdk1.7.0)五、系统变量→寻找 Path 变量→编辑 在变量值最后输入 %JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin; （注意原来Path的变量值末尾有没有;号，如果没有，先输入；号再输入上面的代码） 六、系统变量→新建 CLASSPATH 变量 变量值填写 .;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar（注意最前面有一点） 系统变量配置完毕 七、检验是否配置成功 运行cmd 输入 java -version （java 和 -version 之间有空格） 若如图所示 显示版本信息 则说明安装和配置成功。","categories":[{"name":"java基础","slug":"java基础","permalink":"http://blog.binvon.com/categories/java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"java基础","slug":"java基础","permalink":"http://blog.binvon.com/tags/java%E5%9F%BA%E7%A1%80/"},{"name":"环境配置","slug":"环境配置","permalink":"http://blog.binvon.com/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}]}],"categories":[{"name":"blog","slug":"blog","permalink":"http://blog.binvon.com/categories/blog/"},{"name":"hexoBug","slug":"hexoBug","permalink":"http://blog.binvon.com/categories/hexoBug/"},{"name":"java基础","slug":"java基础","permalink":"http://blog.binvon.com/categories/java%E5%9F%BA%E7%A1%80/"},{"name":"服务器","slug":"服务器","permalink":"http://blog.binvon.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"googel ssr","slug":"googel-ssr","permalink":"http://blog.binvon.com/tags/googel-ssr/"},{"name":"hexo","slug":"hexo","permalink":"http://blog.binvon.com/tags/hexo/"},{"name":"hexoBug","slug":"hexoBug","permalink":"http://blog.binvon.com/tags/hexoBug/"},{"name":"java基础","slug":"java基础","permalink":"http://blog.binvon.com/tags/java%E5%9F%BA%E7%A1%80/"},{"name":"服务器","slug":"服务器","permalink":"http://blog.binvon.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"环境配置","slug":"环境配置","permalink":"http://blog.binvon.com/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}]}